Index: src/downloadtool.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import time\r\nimport os\r\nimport yt_dlp\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.by import By\r\nfrom selenium.webdriver.chrome.service import Service\r\nfrom webdriver_manager.chrome import ChromeDriverManager\r\n\r\n# إعداد متصفح Chrome\r\noptions = webdriver.ChromeOptions()\r\noptions.add_argument(\"--headless\")  # تشغيل المتصفح في الخلفية\r\noptions.add_argument(\"--disable-gpu\")\r\noptions.add_argument(\"--no-sandbox\")\r\noptions.add_argument(\"--disable-dev-shm-usage\")\r\n\r\n# تشغيل WebDriver\r\ndriver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)\r\n\r\n\r\ndef search_tiktok_videos(keyword, max_results=5):\r\n    search_url = f\"https://www.tiktok.com/search?q={keyword}\"\r\n    driver.get(search_url)\r\n    time.sleep(5)  # انتظار تحميل الصفحة\r\n\r\n    video_links = []\r\n    videos = driver.find_elements(By.XPATH, \"//a[contains(@href, '/video/')]\")\r\n\r\n    for video in videos[:max_results]:\r\n        link = video.get_attribute(\"href\")\r\n        if link and link not in video_links:\r\n            video_links.append(link)\r\n\r\n    return video_links\r\n\r\n\r\ndef download_tiktok_video(url):\r\n    ydl_opts = {\r\n        'outtmpl': '%(title)s.%(ext)s',  # تسمية الملف باسم العنوان\r\n        'format': 'best',  # تحميل بأفضل جودة متاحة\r\n        'cookies': 'cookies.txt'  # استخدام ملف الكوكيز لتجاوز الحماية\r\n    }\r\n\r\n    try:\r\n        with yt_dlp.YoutubeDL(ydl_opts) as ydl:\r\n            ydl.download([url])\r\n    except Exception as e:\r\n        print(f\"⚠\uFE0F تعذر تحميل الفيديو: {url}\\nالسبب: {e}\")\r\n\r\n\r\n# البحث عن الملفات النصية داخل مجلد \"Key Words\"\r\nkeywords_dir = \"Key Words\"\r\nkeywords_files = [f for f in os.listdir(keywords_dir) if f.endswith(\".txt\")]\r\n\r\nkeywords = []\r\nfor file_name in keywords_files:\r\n    file_path = os.path.join(keywords_dir, file_name)\r\n    try:\r\n        with open(file_path, \"r\", encoding=\"utf-8\") as file:\r\n            keywords.extend([line.strip() for line in file if line.strip()])\r\n    except FileNotFoundError:\r\n        print(f\"تعذر العثور على الملف: {file_name}\")\r\n\r\n# تنفيذ البحث والتحميل\r\nif keywords:\r\n    for keyword in keywords:\r\n        print(f\"جاري البحث عن فيديوهات لكلمة: {keyword}\")\r\n        video_urls = search_tiktok_videos(keyword)\r\n\r\n        if video_urls:\r\n            print(\"جاري تحميل الفيديوهات...\")\r\n            for url in video_urls:\r\n                download_tiktok_video(url)\r\n            print(\"تم التحميل بنجاح!\")\r\n        else:\r\n            print(\"لم يتم العثور على فيديوهات.\")\r\nelse:\r\n    print(\"لا توجد كلمات مفتاحية في أي ملف داخل المجلد.\")\r\n\r\n# إغلاق المتصفح\r\ndriver.quit()\r\n\r\n# تحديث yt-dlp تلقائيًا لضمان التوافق مع TikTok\r\nos.system(\"yt-dlp -U\")
===================================================================
diff --git a/src/downloadtool.py b/src/downloadtool.py
--- a/src/downloadtool.py	(revision 587951e8779a6a43c7cc83c9f54550507f81d3d8)
+++ b/src/downloadtool.py	(date 1741833561045)
@@ -1,83 +1,91 @@
-import time
 import os
+import re
+import time
 import yt_dlp
 from selenium import webdriver
-from selenium.webdriver.common.by import By
 from selenium.webdriver.chrome.service import Service
+from selenium.webdriver.common.by import By
+from selenium.webdriver.common.keys import Keys
+from selenium.webdriver.chrome.options import Options
+from selenium.webdriver.support.ui import WebDriverWait
+from selenium.webdriver.support import expected_conditions as EC
 from webdriver_manager.chrome import ChromeDriverManager
 
-# إعداد متصفح Chrome
-options = webdriver.ChromeOptions()
-options.add_argument("--headless")  # تشغيل المتصفح في الخلفية
-options.add_argument("--disable-gpu")
-options.add_argument("--no-sandbox")
-options.add_argument("--disable-dev-shm-usage")
-
-# تشغيل WebDriver
-driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
 
+def sanitize_filename(filename):
+    filename = re.sub(r'[^a-zA-Z0-9أ-ي ]', '', filename)  # إزالة الرموز الخاصة
+    return filename[:50]  # تحديد الطول الأقصى لاسم الملف
 
-def search_tiktok_videos(keyword, max_results=5):
-    search_url = f"https://www.tiktok.com/search?q={keyword}"
-    driver.get(search_url)
-    time.sleep(5)  # انتظار تحميل الصفحة
 
-    video_links = []
-    videos = driver.find_elements(By.XPATH, "//a[contains(@href, '/video/')]")
-
-    for video in videos[:max_results]:
-        link = video.get_attribute("href")
-        if link and link not in video_links:
-            video_links.append(link)
-
-    return video_links
-
-
-def download_tiktok_video(url):
-    ydl_opts = {
-        'outtmpl': '%(title)s.%(ext)s',  # تسمية الملف باسم العنوان
-        'format': 'best',  # تحميل بأفضل جودة متاحة
-        'cookies': 'cookies.txt'  # استخدام ملف الكوكيز لتجاوز الحماية
-    }
-
-    try:
-        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
-            ydl.download([url])
-    except Exception as e:
-        print(f"⚠️ تعذر تحميل الفيديو: {url}\nالسبب: {e}")
+def download_tiktok_video(url, retries=3):
+    for attempt in range(retries):
+        try:
+            ydl_opts = {
+                'outtmpl': f'%(title)s.%(ext)s',
+                'quiet': False,
+                'cookiefile': 'cookies.txt',
+                'ignoreerrors': True,
+            }
+            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
+                info_dict = ydl.extract_info(url, download=False)
+                if not info_dict:
+                    print(f'⚠️ تعذر استخراج المعلومات للفيديو: {url}')
+                    return
+                filename = sanitize_filename(info_dict.get('title', 'video'))
+                ydl_opts['outtmpl'] = filename + '.%(ext)s'
+                with yt_dlp.YoutubeDL(ydl_opts) as ydl:
+                    ydl.download([url])
+            return
+        except Exception as e:
+            print(f'⚠️ محاولة {attempt + 1} فشلت: {e}')
+            time.sleep(5)
+    print(f'❌ فشل تحميل الفيديو بعد {retries} محاولات: {url}')
 
 
-# البحث عن الملفات النصية داخل مجلد "Key Words"
-keywords_dir = "Key Words"
-keywords_files = [f for f in os.listdir(keywords_dir) if f.endswith(".txt")]
+def search_tiktok(keyword):
+    options = Options()
+    options.add_argument('--headless')
+    options.add_argument('--disable-gpu')
+    options.add_argument('--no-sandbox')
+    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
+    driver.get('https://www.tiktok.com/')
+    time.sleep(5)
 
-keywords = []
-for file_name in keywords_files:
-    file_path = os.path.join(keywords_dir, file_name)
     try:
-        with open(file_path, "r", encoding="utf-8") as file:
-            keywords.extend([line.strip() for line in file if line.strip()])
-    except FileNotFoundError:
-        print(f"تعذر العثور على الملف: {file_name}")
+        search_box = WebDriverWait(driver, 10).until(
+            EC.element_to_be_clickable((By.NAME, 'q'))
+        )
+        driver.execute_script("arguments[0].click();", search_box)
+        search_box.send_keys(keyword)
+        search_box.send_keys(Keys.RETURN)
+    except Exception as e:
+        print(f'❌ خطأ أثناء البحث: {e}')
+        driver.quit()
+        return []
+
+    time.sleep(5)
+    links = driver.find_elements(By.CSS_SELECTOR, 'a[href*="/video/"]')
+    video_urls = [link.get_attribute('href') for link in links]
+    driver.quit()
+    return video_urls[:5]  # تحميل أول 5 نتائج فقط
 
-# تنفيذ البحث والتحميل
-if keywords:
-    for keyword in keywords:
-        print(f"جاري البحث عن فيديوهات لكلمة: {keyword}")
-        video_urls = search_tiktok_videos(keyword)
-
-        if video_urls:
-            print("جاري تحميل الفيديوهات...")
-            for url in video_urls:
-                download_tiktok_video(url)
-            print("تم التحميل بنجاح!")
-        else:
-            print("لم يتم العثور على فيديوهات.")
-else:
-    print("لا توجد كلمات مفتاحية في أي ملف داخل المجلد.")
+
+def main():
+    keywords_folder = 'Key Words'
+    if not os.path.exists(keywords_folder):
+        print(f'❌ المجلد {keywords_folder} غير موجود!')
+        return
+    for file in os.listdir(keywords_folder):
+        if file.endswith('.txt'):
+            with open(os.path.join(keywords_folder, file), 'r', encoding='utf-8') as f:
+                keywords = [line.strip() for line in f if line.strip()]
+            for keyword in keywords:
+                print(f'🔍 البحث عن: {keyword}')
+                video_urls = search_tiktok(keyword)
+                for url in video_urls:
+                    print(f'⬇️ تحميل: {url}')
+                    download_tiktok_video(url)
 
-# إغلاق المتصفح
-driver.quit()
 
-# تحديث yt-dlp تلقائيًا لضمان التوافق مع TikTok
-os.system("yt-dlp -U")
\ No newline at end of file
+if __name__ == '__main__':
+    main()
